/********************************************************************************************************************************
Name        : Joon Dong
Seneca Email: thdong1@myseneca.ca
Student ID  : 036262152

I have done all the coding by myself and only copied the code that my professor provided to complete my workshops and assignments.
*********************************************************************************************************************************/

Project Reflection:

I think the main skill I've acquired during this project may be surprising. Surprising because it's not language related but rather a part of the software development life cycle. Designing and planning seem to be the biggest takeaway for me in completing this project. It's so important to really understand the specifications of the project that you are working on. If you don't know what the end functionality of the program that you're working on is, it makes it more difficult to align your code with the project specifications. As far as concepts, I would say that I did not learn new concepts but rather fortified my understanding of polymorphism and inheritance. This milestone is hugely dependent on an understanding of the inheritiance structure assigned to us. I'm a bit confused as to why the milestone does not guide us through using templates as that would be a new concept and skill truly acquired. In summary, this feels like an expansive workshop that requires you to put the pieces together yourself.

My understanding of C evolved into C++ by enforcing the 4 pillars of object oriented programming. Encapsulation, abstraction, inheritance, and polymorphism. It almost seems bonkers that at one point in C, we were coding procedurally, with all of our code inside the main function. This course has taught me well that everything is shoehorned into a class, privatized, and can be put a part of an inheritance tree of related classes and it's so much better. Everything can be modularized neatly and if you have a good grasp on memory management, C++ isn't that scary. At least at this point in time. 

In all honesty, I don't think there were any significant challenges for this project. As I said, it felt like 5 workshops, some being longer and some being shorter. It took working ahead, planning and managing time as any project would. But as far as the actual content of the milestones, I don't think we were asked to implement anything of such complexity that there would be a signficant challenge. In fact, I actually think that the milestone was heavily guided. That meaning, the milestone guides you through what to code so as a consequence, students may not even care about the functionality of the module they are coding. It walks you through each function but it doesn't push students to think about "what function would I need to make this module function as intended?". The most helpful strategy I employed however, was looking at the image provided of the inheritance tree. This helped me think logically and see what each module is used for. I think OOP244 is a very gentle introduction into C++ and I've grown well with it. I also think with Cass's teachings, I'm equipped for OOP345. Cheers and take care.